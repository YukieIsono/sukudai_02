import pandas as pd
df = pd.read_csv('cars.csv')
def preprocess_price(column): return pd.to_numeric(column.str.replace('[$,]', ''))
df[['MSRP', 'Invoice']] = df[['MSRP', 'Invoice']].apply(preprocess_price)

#シリンダーの欠損を削除
df = df.dropna(subset=['Cylinders'])

data_columns = df.select_dtypes(include=['float64', 'int64']).drop('Invoice', axis=1)
target_column = 'MSRP'
#MSRPを予測する線形回帰モデル
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error


data_columns = data_columns.fillna(data_columns.mean())


x = data_columns.drop(target_column, axis=1)
y = data_columns[target_column]



x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(x_train,y_train)

y_pred = model.predict(x_test)

mse = mean_squared_error(y_test, y_pred)


print(f'Mean Squared Error: {mse}')
